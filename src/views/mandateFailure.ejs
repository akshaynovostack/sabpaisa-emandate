<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-T4F3SZLP');</script>
    <!-- End Google Tag Manager -->
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Security-Policy" content="default-src 'self' https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' *; media-src 'self' ; frame-src 'self'; form-action 'self' https://stage-securepay.sabpaisa.in https://securepay.sabpaisa.in;"/>
    
    <title>Mandate Registration Failed</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    
    <style>
      :root {
        --primary: #006ced;
        --primary-dark: #002e8b;
        --white: #ffffff;
        --error: #dc3545;
        --error-dark: #c82333;
        --error-light: #f8d7da;
        --warning: #f5a623;
        --background: #f5f8fc;
        --text: #172b4d;
        --text-light: #5e6c84;
        --border: #e4ebf5;
        --card-shadow: 0 4px 16px rgba(0, 46, 139, 0.1);
        --hover-shadow: 0 8px 24px rgba(0, 46, 139, 0.15);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', sans-serif;
        background-color: var(--background);
        color: var(--text);
        line-height: 1.5;
        padding: 20px;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-top: 40px;
      }

      .container {
        max-width: 600px;
        width: 100%;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        gap: 32px;
      }

      /* Hero Section */
      .hero-section {
        text-align: center;
        animation: fadeIn 0.8s ease-out;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 16px;
      }

      .error-icon {
        background: var(--error);
        color: var(--white);
        width: 70px;
        height: 70px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 28px;
        margin: 0 auto 20px;
        box-shadow: 0 10px 20px rgba(220, 53, 69, 0.25);
        animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        transition: transform 0.3s ease;
      }

      .error-icon:hover {
        transform: scale(1.05);
      }

      .error-heading {
        color: var(--error-dark);
        font-size: 30px;
        margin-bottom: 12px;
        font-weight: 700;
        animation: slideUp 0.5s ease-out 0.2s both;
      }

      .error-message {
        color: var(--text);
        font-size: 16px;
        font-weight: 400;
        margin-bottom: 16px;
        animation: slideUp 0.5s ease-out 0.3s both;
      }

      .highlight {
        color: var(--error-dark);
        font-weight: 600;
      }

      /* Transaction Info */
      .transaction-info {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background-color: var(--white);
        padding: 8px 16px;
        border-radius: 20px;
        box-shadow: 0 4px 12px rgba(220, 53, 69, 0.1);
        margin-top: 4px;
        animation: slideUp 0.5s ease-out 0.4s both;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        flex-wrap: wrap;
        justify-content: center;
      }

      .transaction-info:hover {
        box-shadow: 0 6px 16px rgba(220, 53, 69, 0.15);
        transform: translateY(-2px);
      }

      .transaction-label {
        font-size: 13px;
        color: var(--text-light);
        font-weight: 500;
      }

      .transaction-id-wrapper {
        display: flex;
        align-items: center;
        gap: 6px;
      }

      #transaction-id {
        font-size: 14px;
        font-weight: 600;
        color: var(--text);
      }

      .copy-btn {
        background: none;
        border: none;
        color: var(--error);
        cursor: pointer;
        padding: 4px;
        border-radius: 4px;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
      }

      .copy-btn:hover {
        background-color: rgba(220, 53, 69, 0.1);
        transform: scale(1.1);
      }

      /* Cards Container */
      .cards-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      /* Card Styles */
      .card {
        background-color: var(--white);
        border-radius: 16px;
        box-shadow: var(--card-shadow);
        overflow: hidden;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        animation: slideUp 0.5s ease-out;
        animation-fill-mode: both;
        width: 100%;
      }

      .card:hover {
        box-shadow: var(--hover-shadow);
        transform: translateY(-3px);
      }

      .card-content {
        padding: 28px;
      }

      .error-details-card {
        animation-delay: 0.1s;
        border-left: 3px solid var(--error);
      }

      .error-details-card h2 {
        color: var(--error-dark);
        font-size: 22px;
        margin-bottom: 10px;
        font-weight: 600;
      }

      .error-details-card p {
        color: var(--text-light);
        margin-bottom: 24px;
        font-size: 15px;
      }

      /* Error Alert */
      .error-alert {
        background-color: var(--error-light);
        border: 1px solid var(--error);
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 24px;
        color: var(--error-dark);
        display: flex;
        align-items: flex-start;
        gap: 12px;
        animation: slideUp 0.5s ease-out 0.2s both;
      }

      .error-alert i {
        font-size: 20px;
        margin-top: 2px;
      }

      .error-alert-content {
        flex: 1;
      }

      .error-alert-title {
        font-weight: 600;
        margin-bottom: 4px;
      }

      .error-alert-message {
        font-size: 14px;
        opacity: 0.9;
      }

      /* Detail Items */
      .detail-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 0;
        border-bottom: 1px solid var(--border);
      }

      .detail-item:last-child {
        border-bottom: none;
      }

      .label {
        color: var(--text-light);
        font-size: 14px;
        font-weight: 500;
      }

      .value {
        color: var(--text);
        font-weight: 600;
        font-size: 14px;
        text-align: right;
        max-width: 60%;
        word-break: break-word;
      }

      .status-error {
        color: var(--error);
        font-weight: 600;
      }

      .status-pending {
        color: var(--text-light);
        font-weight: 500;
      }

      /* Redirect Message */
      .redirect-message {
        margin-top: 16px;
        padding: 12px 16px;
        background-color: #fff3cd;
        border-radius: 8px;
        border-left: 3px solid var(--warning);
        font-size: 14px;
        color: var(--text-light);
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .pulse-dot {
        width: 8px;
        height: 8px;
        background-color: var(--warning);
        border-radius: 50%;
        animation: pulseDot 1.5s infinite;
      }

      #countdown {
        color: var(--warning);
        font-weight: 600;
      }

      /* Footer */
      .footer {
        text-align: center;
        animation: slideUp 0.5s ease-out 0.4s both;
      }

      .secure-badge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        color: var(--text-light);
        font-size: 14px;
        padding: 8px 16px;
        border-radius: 20px;
        background-color: var(--white);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
      }

      .secure-badge:hover {
        transform: translateY(-1px);
      }

      .secure-badge i {
        font-size: 16px;
      }

      .notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: var(--white);
        color: var(--text);
        padding: 16px 20px;
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        gap: 12px;
        z-index: 1000;
        transform: translateX(400px);
        opacity: 0;
        transition: all 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        border-left: 4px solid var(--error);
        max-width: 350px;
      }

      .notification.active {
        transform: translateX(0);
        opacity: 1;
      }

      .notification-icon {
        color: var(--error);
      }

      .notification-message {
        font-size: 14px;
        font-weight: 500;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes bounceIn {
        0% {
          opacity: 0;
          transform: scale(0.3);
        }
        50% {
          opacity: 1;
          transform: scale(1.05);
        }
        70% {
          transform: scale(0.9);
        }
        100% {
          opacity: 1;
          transform: scale(1);
        }
      }

      @keyframes pulseDot {
        0% {
          opacity: 1;
          transform: scale(1);
        }
        50% {
          opacity: 0.5;
          transform: scale(1.2);
        }
        100% {
          opacity: 1;
          transform: scale(1);
        }
      }

      @media (max-width: 1024px) {
        .container {
          max-width: 90%;
        }
      }

      @media (max-width: 768px) {
        .container {
          max-width: 95%;
          gap: 24px;
        }

        .hero-section {
          gap: 12px;
        }
      }

      @media (max-width: 640px) {
        body {
          padding: 15px;
          padding-top: 20px;
        }

        .container {
          gap: 20px;
        }

        .error-heading {
          font-size: 26px;
        }

        .error-message {
          font-size: 15px;
        }

        .error-icon {
          width: 60px;
          height: 60px;
          font-size: 24px;
        }

        .transaction-info {
          padding: 10px 14px;
          flex-direction: column;
          gap: 4px;
        }

        .card-content {
          padding: 20px;
        }

        .redirect-message {
          font-size: 13px;
        }

        .detail-item {
          flex-direction: column;
          align-items: flex-start;
          gap: 4px;
        }

        .value {
          max-width: 100%;
          text-align: left;
        }
      }

      @media (max-width: 480px) {
        body {
          padding: 10px;
          padding-top: 15px;
        }

        .container {
          gap: 16px;
        }

        .card-content {
          padding: 16px;
        }

        .error-heading {
          font-size: 24px;
        }

        .error-message {
          font-size: 14px;
        }

        .error-icon {
          width: 55px;
          height: 55px;
          font-size: 22px;
        }

        .notification {
          right: 10px;
          top: 10px;
          max-width: calc(100vw - 20px);
        }

        .notification.active {
          transform: translateX(0);
        }
      }

      .card, .transaction-info {
        margin-bottom: 1rem;
      }

      .card:hover, .transaction-info:hover {
        will-change: auto;
      }

      .loader {
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
      }
      
      @keyframes spin {
        to { transform: rotate(360deg); }
      }
      
      #countdown.pulse {
        animation: pulse-text 0.8s infinite;
      }
      
      @keyframes pulse-text {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.1);
        }
        100% {
          transform: scale(1);
        }
      }
      
      .mobile-view {
        padding: 12px 18px !important;
      }

      /* Icon styles */
      .icon {
        display: inline-block;
        font-size: 1.2em;
        line-height: 1;
        vertical-align: middle;
      }
      
      .error-icon .icon {
        font-size: 3rem;
        color: var(--warning);
      }
      
      .copy-btn .icon {
        font-size: 1rem;
      }
      
      .retry-btn .icon {
        font-size: 1.1rem;
        margin-right: 0.5rem;
      }
      
      .support-btn .icon {
        font-size: 1.1rem;
        margin-right: 0.5rem;
      }
      
      .error-item .icon {
        font-size: 1.5rem;
        margin-right: 1rem;
        color: var(--warning);
      }
      
      .secure-badge .icon {
        font-size: 1rem;
        margin-right: 0.5rem;
      }
      
      .notification-icon {
        font-size: 1.2rem;
        margin-right: 0.5rem;
      }

      /* Error details styles */
      .error-details {
        margin-top: 2rem;
      }
    </style>
  </head>
  <body>
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T4F3SZLP"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
    
    <div class="container">
      <!-- Hero Section with Error Message -->
      <div class="hero-section">
        <div class="error-icon">
          <span class="icon">❌</span>
        </div>
        <h1 class="error-heading">Mandate Registration Failed</h1>
        <p class="error-message">We encountered an issue while processing your mandate registration. Please review the details below.</p>
        
        <!-- Transaction Info -->
        <div class="transaction-info">
          <span class="transaction-label">Transaction ID:</span>
          <div class="transaction-id-wrapper">
            <span id="transaction-id" data-value="<%= mandateDetails.sabpaisaTxnId %>"><%= mandateDetails.sabpaisaTxnId %></span>
            <button class="copy-btn" aria-label="Copy transaction ID">
              <span class="icon">📋</span>
            </button>
          </div>
        </div>
      </div>
      
      <!-- Cards Container -->
      <div class="cards-container">
        <!-- Error Details Card -->
        <div class="card error-details-card">
          <div class="card-content">
            <h2>Error Details</h2>
            <p>Please review the following information to understand what went wrong.</p>
            
            <!-- Error Alert -->
            <div class="error-alert">
                <span class="icon">⚠️</span>
                <div class="error-alert-content">
                    <div class="error-alert-title">Error Message</div>
                    <div class="error-alert-message"><%= message %></div>
                </div>
            </div>
            
            <!-- Error Details -->
            <div class="error-details">
                <div class="error-item">
                    <span class="icon">⚠️</span>
                    <div class="error-content">
                        <h4>Error Code</h4>
                        <p><%= mandateDetails.responseCode || 'Unknown' %></p>
                    </div>
                </div>
                
                <div class="error-item">
                    <span class="icon">📝</span>
                    <div class="error-content">
                        <h4>Error Message</h4>
                        <p><%= mandateDetails.responseMessage || 'An unexpected error occurred' %></p>
                    </div>
                </div>
            </div>
            
            <!-- Redirect Message -->
            <div class="redirect-message">
                <span class="pulse-dot"></span>
                <span>You will be automatically redirected in <span id="countdown">10</span> seconds.</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Footer -->
      <div class="footer">
        <div class="secure-badge">
          <span class="icon">🔒</span>
          <span>Secured by e-Nach</span>
        </div>
      </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize copy functionality
            initCopyFunctionality();
            
            // Start the countdown timer for auto-redirect
            startCountdown();
            
            // Add entry animations with staggered timing
            animateElements();
        });

        // Initialize copy functionality
        function initCopyFunctionality() {
            const copyBtn = document.querySelector('.copy-btn');
            const transactionId = document.getElementById('transaction-id');
            
            if (copyBtn && transactionId) {
                copyBtn.addEventListener('click', function() {
                    const textToCopy = transactionId.getAttribute('data-value') || transactionId.textContent;
                    
                    navigator.clipboard.writeText(textToCopy).then(() => {
                        // Change button icon and color temporarily
                        const originalContent = this.innerHTML;
                        this.innerHTML = '<span class="icon">✓</span>';
                        this.style.color = 'var(--success)';
                        
                        // Show notification
                        showNotification('Transaction ID copied to clipboard', '📋');
                        
                        // Revert button after 1.5 seconds
                        setTimeout(() => {
                            this.innerHTML = originalContent;
                            this.style.color = '';
                        }, 1500);
                    }).catch(err => {
                        console.error('Could not copy text: ', err);
                        showNotification('Failed to copy. Please try again.', '⚠️', true);
                    });
                });
            }
        }
        
        // Notification system
        function showNotification(message, icon, isError = false) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            if (isError) {
                notification.style.borderLeftColor = 'var(--warning)';
            }
            
            notification.innerHTML = `
                <span class="notification-icon">${icon}</span>
                <span class="notification-message">${message}</span>
            `;
            
            document.body.appendChild(notification);
            
            // Show notification with slight delay for better animation
            setTimeout(() => {
                notification.classList.add('active');
            }, 10);
            
            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.classList.remove('active');
                setTimeout(() => {
                    notification.remove();
                }, 400); // Wait for transition to complete
            }, 3000);
        }
        
        // Countdown timer function
        function startCountdown() {
            const countdownElement = document.getElementById('countdown');
            if (!countdownElement) return;
            
            let seconds = 10; // Starting seconds
            countdownElement.textContent = seconds;
            
            const interval = setInterval(() => {
                seconds--;
                
                if (seconds <= 0) {
                    clearInterval(interval);
                    // Submit form with eNACH response
                    submitEnachResponse();
                    return;
                }
                
                // Update countdown display
                countdownElement.textContent = seconds;
                
                // Add pulse animation when time is running low
                if (seconds <= 5) {
                    countdownElement.style.color = 'var(--error)';
                    if (seconds <= 3) {
                        countdownElement.classList.add('pulse');
                    }
                }
            }, 1000);
        }

        // Submit eNACH response form
        function submitEnachResponse() {
            const redirectUrl = "<%= redirectUrl %>"; 
            const enachResponse = "<%= enachResponse %>"; 
            
            const form = document.createElement("form");
            form.method = "POST";
            form.action = redirectUrl;

            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "enachResponse";
            input.value = enachResponse;
            form.appendChild(input);

            document.body.appendChild(form);
            form.submit();
        }

        // Animate elements with staggered timing
        function animateElements() {
            const elements = [
                '.error-icon',
                '.error-heading',
                '.error-message',
                '.transaction-info',
                '.error-details-card',
                '.footer'
            ];
            
            elements.forEach((selector, index) => {
                const element = document.querySelector(selector);
                if (element) {
                    element.style.opacity = '0';
                    element.style.transform = 'translateY(25px)';
                    
                    setTimeout(() => {
                        element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
                        element.style.opacity = '1';
                        element.style.transform = 'translateY(0)';
                    }, 100 + (index * 120));
                }
            });
        }
    </script>
  </body>
</html>